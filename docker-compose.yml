services:
  postgres:
    image: postgres:12
    container_name: "postgres-${AIRFLOW_ENV_TYPE}-${AIRFLOW_ENV_NAME}"
    user: root
    volumes:
      - ./pg-airflow:/var/lib/postgresql/data
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "127.0.0.1:${AIRFLOW_POSTGRES_PORT}:5432"
    networks:
      - annuaire-network

  webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
      args:
          - USER_EMAIL=$USER_EMAIL
          - USER_NAME=$USER_NAME
    container_name: "airflow-${AIRFLOW_ENV_TYPE}-${AIRFLOW_ENV_NAME}"
    hostname: webserver
    restart: unless-stopped
    depends_on:
      - postgres
      - elasticsearch
    command: webserver
    env_file:
      - .env
    volumes:
      - ${LOCAL_AIRFLOW_DAG_PATH}:/opt/airflow/dags/dag_datalake_sirene/
      - ${LOCAL_TMP_PATH}:/tmp
      - ./scripts:/opt/airflow/scripts
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./requirements.txt:/opt/airflow/requirements.txt
    ports:
      - "127.0.0.1:${AIRFLOW_WEBSERVER_PORT}:8080"
      - "127.0.0.1:${AIRFLOW_LOG_SERVER_PORT}:8793"
    entrypoint: ./scripts/airflow-entrypoint.sh
    healthcheck:
      test: ["CMD-SHELL", "[ -f /opt/airflow/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 32
    networks:
      - annuaire-network

  elasticsearch:
    build:
      context: .
      dockerfile: Dockerfile.elasticsearch
    container_name: "elasticsearch-${AIRFLOW_ENV_TYPE}-${AIRFLOW_ENV_NAME}"
    environment:
      - discovery.type=single-node
      - cluster.name=annuaire-search-cluster
      - node.name=annuaire-es-node-1
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD:-elastic}
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - ${LOCAL_TMP_PATH}/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - "${ELASTIC_PORT:-9200}:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD-SHELL", "curl -u elastic:${ELASTIC_PASSWORD:-elastic} -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - annuaire-network

networks:
  annuaire-network:
    driver: bridge
